; Ergebnis ist StringList (mehrere Einträge möglich);
; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

Switch count ($ResultList$)
	Case "0"
		comment "No installations of " + $ProductName$ + " found in registry. Nothing to do"
	EndCase
	Case "1"
		comment "Found installation in registry"
		Message "Uninstalling " + $ProductName$
		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))
		
		; welcher Installer wurde verwendet? MSI oder Inno? UninstallString verrät es.
		Set $UninstallProgram$ = GetRegistryValue($RegId$, "UninstallString", $RegBitScope$)
		; Achtung 'contains' ist case-sensitive! msiexec != MsiExec
		if (contains($UninstallProgram$, "MsiExec.exe"))
			; bei MSI wird nur der RegKey ohne Pfad benötigt
			Set $RegId$ = takeString (-1,splitString($RegId$,"\"))
			Winbatch_uninstall_msi
			Set $ExitCode$ = getLastExitCode
			if stringToBool(isMsiExitcodeFatal($ExitCode$, "True", $ErrorString$))
				isFatalError
			endif
			Set $UninstallDir$ = $InstallDir$
		endif
		if (contains($UninstallProgram$, "unins000.exe"))
			; doppelte Anführungszeichen entfernen
			Set $UninstallProgram$ = takeString (1, splitString ( $UninstallProgram$ , '"')) 
			Winbatch_uninstall_inno 
			Set $ExitCode$ = getLastExitCode
			if stringToBool(isInnoExitcodeFatal($ExitCode$, "True", $ErrorString$))
				isFatalError
			endif
			Set $UninstallDir$ = ExtractFilePath($UninstallProgram$)
		endif
		
		; Languagefiles etc. bleiben in InstallDir zurück, ggf. aufräumen
		; Warum UninstallDir?! Will InstallDir aus common nicht überschreiben!
		if FileExists ($UninstallDir$)
			Files_uninstall
		endif

		comment "include custom post deinstall file"
		set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
		if not ($CustomPostDeinstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
			endif
		endif
	EndCase
	DefaultCase
		logError "Found more than one installation! This case is not intended yet in this script! Stop now."
		isFatalError
	EndCase
EndSwitch                    

[Winbatch_uninstall_inno]
"$UninstallProgram$" /verysilent /norestart /SUPPRESSMSGBOXES /nocancel

[Winbatch_uninstall_msi]
msiexec /x $RegId$ $SilentOption$ REBOOT=ReallySuppress

[Files_uninstall]
delete -sf $UninstallDir$
